2007-11-20  Andrew Lunn  <andrew.lunn@ascom.ch>

	* cdl/usbs_at91.cdl: Fixed typos in
	CYGNUM_DEVS_USB_AT91_GPIO_PULLUP_INVERTED and
	CYGNUM_DEVS_USB_AT91_GPIO_READ_POWER_INVERTED. Fixing the typo.

	* src/usbs_at91.c (usbs_at91_set_pullup): Change the logic so that
	CYGNUM_DEVS_USB_AT91_GPIO_PULLUP_INVERTED does actually cause an
	invert when set true.
	
2006-09-07  John Eigelaar  <jeigelaar@mweb.co.za>

	* cdl/usbs_at91.c: Read actual EP addresses from the EP configuartion
	rather than relying on the order in the configuration list.

2006-06-06  Andrew Lunn  <andrew.lunn@ascom.ch>

	* cdl/usbs_at91.cdl: Allow EP0 to be enabled when there are no
	slave clients.

2006-05-25  Andrew Lunn  <andrew.lunn@ascom.ch>

	* src/usbs_at91_data.cxx: Change the initialization priority.  The
	USB tty driver is initialized at priority CYG_INIT_IO, so the USB
	device has to be initialized before that.

2006-05-19  Andrew Lunn  <andrew.lunn@ascom.ch>

	* src/usbs_at91.c: Rework pullup and power dectect to use the AT91
	GPIO macros.

2006-05-07  Andrew Lunn  <andrew.lunn@ascom.ch>

	* Included into eCos anonymous CVS.

	Note: There appears to be a hardware bug with OUT transfers.  It
	appears that after resetting the endpoint, the first OUT transfer
	does not trigger a receive interrupt. The BK0 bit is not set,
	however the number of bytes in the receiver FIFO is correct.  The
	second OUT transfer causes both BK0 and BK1 bits to be set and an
	interrupt generated. Currently no workaround is used to correct
	this behavoiour. 
 	
2006-04-23  Andrew Lunn  <andrew.lunn@ascom.ch>

	* src/usbs_at91.c: Endpoint 3 can send upto 64 bytes at a time,
	not 8.

2006-04-20  Andrew Lunn  <andrew.lunn@ascom.ch>

	* src/usbs_at91.c (usbs_at91_control_data_sent): Send a zero byte
	packet when the transfer is an exact multiple of the endpoint
	buffer size.
	
2006-04-16  Andrew Lunn  <andrew.lunn@ascom.ch>

	* src/usbs_at91.c (usbs_testing_endpoints): Added support for the
	USB testcase framework by exporting what endpoint we have.
	* src/usbs_at91.c (usbs_at91_control_setup): Make requests other
	than standard requests work, eg CLASS, VENDOR etc.
	* src/usbs_at91.c (usbs_at91_handle_reset): Configure the endpoint 
	hardware using the configuration information.
	* src/usbs_at91.c (usbs_at91_control_data_sent): Transaction is
	complete when the buffer is empty _and_ there is no refill
	function defined.
	
2006-03-10  Oliver Munz  <oli@snr.ch>

	* CDL-Update for PLL-Freuenzy.

2006-03-06  Oliver Munz  <oli@snr.ch>

	* USB device driver work finished - haha.
	
	What's missing:
	The set_... and get_freature-host-commands are not implemented yet.
	The dynamical configuration of the data-endpoints is not reflectet in
	the "usbs.h" API.
	Isochronus transfer is not implemented.
	Polling routines are not implemented.
	USB-Tests are not done.
	The PowerDetectPin is not used for the state.
	AT91SAM7X's are not supported at the moment.
	
	But it works for me...

//===========================================================================
//####ECOSGPLCOPYRIGHTBEGIN####
// -------------------------------------------
// This file is part of eCos, the Embedded Configurable Operating System.
// Copyright (C) 1998, 1999, 2000, 2001, 2002 Red Hat, Inc.
//
// eCos is free software; you can redistribute it and/or modify it under
// the terms of the GNU General Public License as published by the Free
// Software Foundation; either version 2 or (at your option) any later version.
//
// eCos is distributed in the hope that it will be useful, but WITHOUT ANY
// WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// for more details.
//
// You should have received a copy of the GNU General Public License along
// with eCos; if not, write to the Free Software Foundation, Inc.,
// 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA.
//
// As a special exception, if other files instantiate templates or use macros
// or inline functions from this file, or you compile this file and link it
// with other works to produce a work based on this file, this file does not
// by itself cause the resulting work to be covered by the GNU General Public
// License. However the source code for this file must still be made available
// in accordance with section (3) of the GNU General Public License.
//
// This exception does not invalidate any other reasons why a work based on
// this file might be covered by the GNU General Public License.
//
// Alternative licenses for eCos may be arranged by contacting Red Hat, Inc.
// at http://sources.redhat.com/ecos/ecos-license/
// -------------------------------------------
//####ECOSGPLCOPYRIGHTEND####
//===========================================================================
